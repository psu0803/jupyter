# -*- coding: utf-8 -*-
"""2023-11-23

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pgD--suucDqFsELbeuXgm8DBJpUjYrns
"""

!pip install tensorflow==2.14.0

from sklearn import datasets
iris = datasets.load_iris()
X=iris.data
y=iris.target
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

print(X_train.shape)

print(X_test[1])
print(y_test[1])

from keras.utils import to_categorical
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)
print(y_train[0])

from keras import models
from keras import layers
model = models.Sequential()
model.add(layers.Dense(2, input_shape=(4, )))
model.add(layers.Dense(3, activation='softmax'))

model.summary()

model.compile(optimizer="rmsprop", loss="categorical_crossentropy", metrics=["accuracy"])
print("Train on", len(X_train), "samples")
history = model.fit(X_train, y_train, epochs=100)

results = model.evaluate(X_test, y_test)

print(X_test[:1])
prediction = model.predict(X_test[:1])
print(prediction)

print(y_test[:5])

prediction = model.predict(X_test[:5])
import numpy as np
print('[결과라벨] [예측라벨]')
for i in range(5):
  print(' ', np.argmax(y_test[i]), end=' : ')
  print(np.argmax(prediction[i]))

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
column_names = ['연비', '기통수', '배기량', '마력', '중량', '가속력', '연식', '제조국가']
dataset = pd.read_csv('automobile.csv', names=column_names, comment='\t', sep=" ", skipinitialspace=True)
dataset.head(3)

dataset.isnull().sum()

dataset = dataset.dropna()

dataset.isnull().sum()

code = [1, 2, 3]
nations = ['미국', '유럽', '일본']
dataset['제조국가'].replace(code, nations, inplace=True)
dataset.iloc[17:20]

dataset = pd.concat([dataset, pd.get_dummies(dataset["제조국가"], dtype=float)],axis=1, sort=False)
dataset.iloc[17:20]

dataset.pop('제조국가')
dataset.head(3)

len(dataset.index)

train_data = dataset.sample(350)
len(train_data.index)

test_data = dataset.drop(train_data.index)
len(test_data.index)

y_train = train_data['연비']
y_test = test_data['연비']
y_test.head(3)

train_data.pop('연비')
test_data.pop('연비')
train_data[:3]

from keras import models
from keras import layers
model = models.Sequential()
model.add(layers.Dense(32, activation='relu', input_dim=len(train_data.keys())))
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(1))

model.summary()

model.compile(optimizer='rmsprop', loss='mse', metrics=['mae'])

history = model.fit(train_data, y_train, validation_split=0.2, epochs=200)

mse, mae = model.evaluate(train_data, y_train)

test_data[:1]

prediction = model.predict(test_data[:1])
print('예측: ', prediction)
print('MAE: ', mae)